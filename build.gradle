buildscript {
    repositories {
        mavenCentral()
        jcenter {
            url "https://jcenter.bintray.com/"
        }
    }
    dependencies {
        classpath 'com.commercehub.gradle.plugin:gradle-avro-plugin:0.21.0'
    }
}

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    // Spring Boot plugins
    id 'org.springframework.boot' version '2.7.15'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

apply plugin: 'com.commercehub.gradle.plugin.avro'

group = 'br.com.adriano'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://packages.confluent.io/maven'
    }
    maven { url "https://jitpack.io" }
}

dependencies {

    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }

    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.apache.avro:avro'
    implementation "io.confluent:kafka-avro-serializer:6.1.0"

    implementation 'org.apache.logging.log4j:log4j-spring-boot'

    // implementation 'org.projectlombok:lombok:1.18.26'

    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

application {
    // Define the main class for the application.
    mainClassName = 'br.com.adriano.App'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}